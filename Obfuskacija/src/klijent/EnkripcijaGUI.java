/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package klijent;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import pomocneKlase.PomocnaKlasaKriptografija;

/**
 *
 * @author Raka
 */
public class EnkripcijaGUI extends javax.swing.JFrame {

    /**
     * Creates new form EnkripcijaGUI
     */
    private String korisnickoIme="";
    private String putanjaDoIzvornogFajla="";
    public EnkripcijaGUI(String korisnickoIme) {
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setLocationRelativeTo(this);
        this.korisnickoIme = korisnickoIme;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        datotekaTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        datotekaButton = new javax.swing.JButton();
        korisniciComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        enkripcijaButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        algoritamComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        datotekaTextArea.setColumns(20);
        datotekaTextArea.setLineWrap(true);
        datotekaTextArea.setRows(5);
        datotekaTextArea.setEnabled(false);
        jScrollPane1.setViewportView(datotekaTextArea);

        jLabel1.setText("Datoteka:");

        datotekaButton.setText("Datoteka");
        datotekaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datotekaButtonActionPerformed(evt);
            }
        });

        korisniciComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "a", "b", "c", "d" }));

        jLabel2.setText("Korisnik:");

        enkripcijaButton.setText("Enkripcija");
        enkripcijaButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        enkripcijaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enkripcijaButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("ENKRIPCIJA");

        algoritamComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AES", "DES" }));

        jLabel4.setText("Algoritam:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(enkripcijaButton)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(datotekaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel4))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(algoritamComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(korisniciComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datotekaButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(korisniciComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algoritamComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(enkripcijaButton)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void datotekaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datotekaButtonActionPerformed
        String izabraniFolder = "";
        FileNameExtensionFilter fileFilter = new FileNameExtensionFilter(".java", "java");
        datotekaTextArea.setText("");
        JFileChooser fajl = new JFileChooser();
        fajl.setFileFilter(fileFilter);
        fajl.setCurrentDirectory(new java.io.File("./fajlovi/java"));
        fajl.setDialogTitle("Odaberi java datoteku");
        fajl.setFileSelectionMode(JFileChooser.FILES_ONLY);

        //  fajl.setAcceptAllFileFilterUsed(false);
        if (fajl.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            izabraniFolder = fajl.getSelectedFile().getAbsolutePath();
            System.out.println("getSelectedFile() : " + fajl.getSelectedFile());
        } else {
            System.out.println("No Selection ");
        }
        datotekaTextArea.setText(izabraniFolder);
    }//GEN-LAST:event_datotekaButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosed

    private void enkripcijaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enkripcijaButtonActionPerformed
        
        
        try {
            File fajl = new File(datotekaTextArea.getText());
            BufferedReader br = new BufferedReader(new FileReader(fajl));
            System.out.println("DA LI JE DATOTEKA:" + fajl.isFile());
            System.out.println("Prva linija:" + br.readLine().toString());
            String nazivFajla="";
            int pos = fajl.getName().lastIndexOf(".");
                if(pos != -1) {
              nazivFajla = fajl.getName().substring(0, pos);
                }

           
            System.out.println("NA Z I V    FAJLA BEZ EKSTENZIJE:" + nazivFajla);
            File dekriptovan = new File("./fajlovi/java/" + nazivFajla + "_dekript.java");
            File kriptovan = new File("./fajlovi/java/" + nazivFajla + "_kript.txt");
            String algoritam = (String) algoritamComboBox.getSelectedItem();
            String izabraniAlgoritam = algoritam;
            KeyGenerator generator = KeyGenerator.getInstance(izabraniAlgoritam);
            SecretKey simetricniKljuc = generator.generateKey();
            PomocnaKlasaKriptografija.kriptujFajl(simetricniKljuc, fajl, kriptovan);
            PomocnaKlasaKriptografija.dekriptujFajl(simetricniKljuc, kriptovan, dekriptovan);
            
            try
        {  
         // We are running "dir" and "ping" command on cmd 
         Runtime.getRuntime().exec("cmd /c start cmd.exe /K \"cd fajlovi/java/ && javac Faktorijel.java && java Faktorijel\""); 
        } 
        catch (Exception e) 
        { 
            System.out.println("HEY Buddy ! U r Doing Something Wrong "); 
            e.printStackTrace(); 
        } 
            
            
            this.setVisible(false);
        } catch (Exception ex) {
            ex.printStackTrace();
        } 
        
        
    }//GEN-LAST:event_enkripcijaButtonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(EnkripcijaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(EnkripcijaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(EnkripcijaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(EnkripcijaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new EnkripcijaGUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> algoritamComboBox;
    private javax.swing.JButton datotekaButton;
    private javax.swing.JTextArea datotekaTextArea;
    private javax.swing.JButton enkripcijaButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> korisniciComboBox;
    // End of variables declaration//GEN-END:variables
}
